// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IntEvaluator is an autogenerated mock type for the IntEvaluator type
type IntEvaluator struct {
	mock.Mock
}

// Int provides a mock function with no fields
func (_m *IntEvaluator) Int() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Int")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// NewIntEvaluator creates a new instance of IntEvaluator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIntEvaluator(t interface {
	mock.TestingT
	Cleanup(func())
}) *IntEvaluator {
	mock := &IntEvaluator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
